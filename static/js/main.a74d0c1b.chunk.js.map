{"version":3,"sources":["logo.svg","Navigation/NavigationBanner.tsx","Navigation/NavigationBrand.tsx","Navigation/Pages.ts","Navigation/NavigationMain.tsx","Pages/Home/Home.tsx","Pages/Story/Story.tsx","Pages/Party/Party.tsx","Pages/Travel/Travel.tsx","Pages/Todo/Todo.tsx","Pages/Schedule/Schedule.tsx","Pages/Photos/Photos.tsx","Pages/Registry/Registry.tsx","Pages/RSVP/RSVP.tsx","Navigation/NavigationSwitch.tsx","Navigation/Navigation.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","NavigationBanner","this","props","bg","variant","Navbar","expand","className","Brand","React","Component","NavigationBrand","to","alt","src","logo","width","height","Pages","id","name","link","NavigationMain","PageList","map","Nav","Item","key","Link","collapseOnSelect","sticky","Toggle","aria-controls","Collapse","fill","Home","Story","Party","Travel","Todo","Schedule","Photos","Registry","Container","fluid","url","RSVP","NavigationSwitch","path","Navigation","App","basename","Boolean","window","location","hostname","match","theme","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a74d0c1b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.4dacbda8.svg\";","import React from 'react'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport { ThemeProps } from '../Theme/Theme'\r\n\r\nexport class NavigationBanner extends React.Component<ThemeProps, object> {\r\n  render() {\r\n    const { bg, variant } = this.props\r\n    return (\r\n      <Navbar\r\n        expand=\"md\"\r\n        bg={bg}\r\n        variant={variant}\r\n        className=\"justify-content-center NavMain-Banner\"\r\n      >\r\n        <Navbar.Brand>\r\n          <h1>#ColeLottaLove!</h1>\r\n        </Navbar.Brand>\r\n      </Navbar>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport logo from '../logo.svg'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nexport class NavigationBrand extends React.Component {\r\n  render() {\r\n    return (\r\n      <LinkContainer to=\"/\">\r\n        <Navbar.Brand>\r\n          <img\r\n            alt=\"\"\r\n            src={logo}\r\n            width=\"30\"\r\n            height=\"30\"\r\n            className=\"d-inline-block align-top\"\r\n          />\r\n          Home\r\n        </Navbar.Brand>\r\n      </LinkContainer>\r\n    )\r\n  }\r\n}\r\n","interface Page {\r\n  id: string\r\n  name: string\r\n  link: string\r\n}\r\n\r\n// const home: Page = {\r\n//   id: 'home',\r\n//   name: 'Home',\r\n//   link: '/',\r\n// }\r\nconst story: Page = {\r\n  id: 'story',\r\n  name: 'Our Story',\r\n  link: '/story',\r\n}\r\nconst party: Page = {\r\n  id: 'party',\r\n  name: 'Wedding Party',\r\n  link: '/party',\r\n}\r\nconst travel: Page = {\r\n  id: 'travel',\r\n  name: 'Travel',\r\n  link: '/travel',\r\n}\r\nconst todo: Page = {\r\n  id: 'todo',\r\n  name: 'Things To Do',\r\n  link: '/todo',\r\n}\r\nconst schedule: Page = {\r\n  id: 'schedule',\r\n  name: 'Schedule of Events',\r\n  link: '/schedule',\r\n}\r\nconst photos: Page = {\r\n  id: 'photos',\r\n  name: 'Photos',\r\n  link: '/photos',\r\n}\r\nconst registry: Page = {\r\n  id: 'registry',\r\n  name: 'Registry',\r\n  link: '/registry',\r\n}\r\nconst rsvp: Page = {\r\n  id: 'rsvp',\r\n  name: 'RSVP',\r\n  link: '/rsvp',\r\n}\r\nexport const Pages = [\r\n  story,\r\n  party,\r\n  travel,\r\n  todo,\r\n  schedule,\r\n  photos,\r\n  registry,\r\n  rsvp,\r\n]\r\n","import React from 'react'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { ThemeProps } from '../Theme/Theme'\r\n\r\nimport { NavigationBrand } from './NavigationBrand'\r\nimport { Pages } from './Pages'\r\n\r\nexport class NavigationMain extends React.Component<ThemeProps, object> {\r\n  render() {\r\n    const { bg, variant } = this.props\r\n\r\n    const PageList = Pages.map(Pages => (\r\n      <Nav.Item key={Pages.id}>\r\n        <LinkContainer to={Pages.link}>\r\n          <Nav.Link>{Pages.name}</Nav.Link>\r\n        </LinkContainer>\r\n      </Nav.Item>\r\n    ))\r\n\r\n    return (\r\n      <Navbar\r\n        collapseOnSelect={true}\r\n        expand=\"lg\"\r\n        bg={bg}\r\n        variant={variant}\r\n        sticky=\"top\"\r\n      >\r\n        <NavigationBrand />\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav fill={true}>{PageList}</Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\nexport class Home extends React.Component {\r\n  render() {\r\n    return <h1>Home</h1>\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\nexport class Story extends React.Component {\r\n  render() {\r\n    return <h1>Story</h1>\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\nexport class Party extends React.Component {\r\n  render() {\r\n    return <h1>Party</h1>\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\nexport class Travel extends React.Component {\r\n  render() {\r\n    return <h1>Travel</h1>\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\nexport class Todo extends React.Component {\r\n  render() {\r\n    return <h1>Todo</h1>\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\nexport class Schedule extends React.Component {\r\n  render() {\r\n    return <h1>Schedule</h1>\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\nexport class Photos extends React.Component {\r\n  render() {\r\n    return <h1>Photos</h1>\r\n  }\r\n}\r\n","import React from 'react'\r\nimport Iframe from 'react-iframe'\r\nimport Container from 'react-bootstrap/Container'\r\nimport './Registry.css'\r\n\r\nexport class Registry extends React.Component {\r\n  render() {\r\n    return (\r\n      <Container fluid={true}>\r\n        <Iframe url=\"https://www.zola.com/registry/christopherandmichellemay22\"></Iframe>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\nexport class RSVP extends React.Component {\r\n  render() {\r\n    return <h1>RSVP</h1>\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport { Home } from '../Pages/Home/Home'\r\nimport { Story } from '../Pages/Story/Story'\r\nimport { Party } from '../Pages/Party/Party'\r\nimport { Travel } from '../Pages/Travel/Travel'\r\nimport { Todo } from '../Pages/Todo/Todo'\r\nimport { Schedule } from '../Pages/Schedule/Schedule'\r\nimport { Photos } from '../Pages/Photos/Photos'\r\nimport { Registry } from '../Pages/Registry/Registry'\r\nimport { RSVP } from '../Pages/RSVP/RSVP'\r\n\r\nexport class NavigationSwitch extends React.Component {\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <Route path=\"/story\">\r\n          <Story />\r\n        </Route>\r\n        <Route path=\"/party\">\r\n          <Party />\r\n        </Route>\r\n        <Route path=\"/travel\">\r\n          <Travel />\r\n        </Route>\r\n        <Route path=\"/todo\">\r\n          <Todo />\r\n        </Route>\r\n        <Route path=\"/schedule\">\r\n          <Schedule />\r\n        </Route>\r\n        <Route path=\"/photos\">\r\n          <Photos />\r\n        </Route>\r\n        <Route path=\"/registry\">\r\n          <Registry />\r\n        </Route>\r\n        <Route path=\"/rsvp\">\r\n          <RSVP />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Home />\r\n        </Route>\r\n      </Switch>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\nimport '../Theme/css/Navigation.css'\r\nimport { ThemeProps } from '../Theme/Theme'\r\nimport { NavigationBanner } from './NavigationBanner'\r\nimport { NavigationMain } from './NavigationMain'\r\nimport { NavigationSwitch } from './NavigationSwitch'\r\n\r\nexport class Navigation extends React.Component<ThemeProps, object> {\r\n  render() {\r\n    const { bg, variant } = this.props\r\n    return (\r\n      <>\r\n        <NavigationBanner bg={bg} variant={variant} />\r\n        <NavigationMain bg={bg} variant={variant} />\r\n        <div>\r\n          <NavigationSwitch />\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\nimport { HashRouter as Router } from 'react-router-dom'\nimport { ThemeProps } from './Theme/Theme'\n\nimport { Navigation } from './Navigation/Navigation'\n\nexport class App extends React.Component<ThemeProps, object> {\n  render() {\n    const { bg, variant } = this.props\n    return (\n      <Router basename=\"/cole-wedding\">\n        <Navigation bg={bg} variant={variant} />\n      </Router>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { ThemeProps } from './Theme/Theme'\nimport { App } from './App'\nimport * as serviceWorker from './serviceWorker'\n\nconst theme: ThemeProps = {\n  bg: 'light',\n  variant: 'light',\n}\n\nReactDOM.render(\n  <App bg={theme.bg} variant={theme.variant} />,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}